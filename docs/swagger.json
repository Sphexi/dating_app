{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample dating app API.",
        "title": "Dating App API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/cards": {
            "get": {
                "description": "Get a list of cards based on the logged-in user's preferences.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a list of cards based on user preferences",
                "responses": {
                    "200": {
                        "description": "List of cards matching user's preferences",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Card"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login with the provided phone number and get OTP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login Object",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.Entry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP generated successfully",
                        "schema": {
                            "$ref": "#/definitions/response.OTP"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Invalid phone number",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/packages": {
            "get": {
                "description": "Retrieve all packages.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Packages"
                ],
                "summary": "Get all packages",
                "responses": {
                    "200": {
                        "description": "List of packages",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Package"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/packages/create": {
            "post": {
                "description": "Create a new package.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Packages"
                ],
                "summary": "Create a new package",
                "parameters": [
                    {
                        "description": "Package object",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.Package"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Package created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/packages/delete/{id}": {
            "patch": {
                "description": "Soft delete a package by setting is_deleted field to true.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Packages"
                ],
                "summary": "Soft delete a package",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Package ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Package deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Package not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/packages/edit/{id}": {
            "put": {
                "description": "Update an existing package by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Packages"
                ],
                "summary": "Update a package",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Package ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Package object",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.Package"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Package updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Package not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/purchase": {
            "post": {
                "description": "Purchase premium membership.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Purchase premium",
                "parameters": [
                    {
                        "description": "Purchase object",
                        "name": "purchase",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Purchase"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Purchase successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Register a new user with the provided phone number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Signup Object",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.Entry"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OTP generated successfully",
                        "schema": {
                            "$ref": "#/definitions/response.OTP"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/swipe": {
            "post": {
                "description": "Swipe left or right on a profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Swipe",
                "parameters": [
                    {
                        "description": "Swipe object",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.Swipe"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Swipe recorded successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/verify-otp": {
            "post": {
                "description": "Verify the OTP entered by the user and create a session.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Verify OTP",
                "parameters": [
                    {
                        "description": "Verify OTP object",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.OTP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid OTP",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Card": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "bio": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "model.Package": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "feature": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Purchase": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "package_id": {
                    "type": "integer"
                },
                "purchase_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "payload.Entry": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "phone_number": {
                            "type": "string",
                            "example": "1234567890"
                        }
                    }
                }
            }
        },
        "payload.OTP": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "otp": {
                            "type": "string",
                            "example": "123456"
                        },
                        "phone_number": {
                            "type": "string",
                            "example": "1234567890"
                        }
                    }
                }
            }
        },
        "payload.Package": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "currency": {
                            "type": "string",
                            "example": "USD"
                        },
                        "feature": {
                            "type": "string",
                            "example": "Sample Feature"
                        },
                        "name": {
                            "type": "string",
                            "example": "Sample Package"
                        },
                        "price": {
                            "type": "number",
                            "example": 9.99
                        }
                    }
                }
            }
        },
        "payload.Swipe": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "profile_id": {
                            "type": "integer",
                            "example": 456
                        },
                        "swipe_type": {
                            "type": "string",
                            "example": "like"
                        },
                        "swiper_id": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                }
            }
        },
        "response.OTP": {
            "type": "object",
            "properties": {
                "otp": {
                    "type": "string"
                }
            }
        }
    }
}