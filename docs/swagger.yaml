basePath: /
definitions:
  model.Card:
    properties:
      age:
        type: integer
      bio:
        type: string
      name:
        type: string
      photo_url:
        type: string
      user_id:
        type: integer
      verified:
        type: boolean
    type: object
  model.Package:
    properties:
      created_at:
        type: string
      currency:
        type: string
      feature:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  model.Purchase:
    properties:
      created_at:
        type: string
      id:
        type: integer
      package_id:
        type: integer
      purchase_date:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  payload.Entry:
    properties:
      data:
        properties:
          phone_number:
            example: "1234567890"
            type: string
        type: object
    type: object
  payload.OTP:
    properties:
      data:
        properties:
          otp:
            example: "123456"
            type: string
          phone_number:
            example: "1234567890"
            type: string
        type: object
    type: object
  payload.Package:
    properties:
      data:
        properties:
          currency:
            example: USD
            type: string
          feature:
            example: Sample Feature
            type: string
          name:
            example: Sample Package
            type: string
          price:
            example: 9.99
            type: number
        type: object
    type: object
  payload.Swipe:
    properties:
      data:
        properties:
          profile_id:
            example: 456
            type: integer
          swipe_type:
            example: like
            type: string
          swiper_id:
            example: 123
            type: integer
        type: object
    type: object
  response.OTP:
    properties:
      otp:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample dating app API.
  title: Dating App API
  version: "1.0"
paths:
  /cards:
    get:
      consumes:
      - application/json
      description: Get a list of cards based on the logged-in user's preferences.
      produces:
      - application/json
      responses:
        "200":
          description: List of cards matching user's preferences
          schema:
            items:
              $ref: '#/definitions/model.Card'
            type: array
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get a list of cards based on user preferences
  /login:
    post:
      consumes:
      - application/json
      description: Login with the provided phone number and get OTP.
      parameters:
      - description: Login Object
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/payload.Entry'
      produces:
      - application/json
      responses:
        "200":
          description: OTP generated successfully
          schema:
            $ref: '#/definitions/response.OTP'
        "400":
          description: Invalid request format
          schema:
            type: string
        "401":
          description: Invalid phone number
          schema:
            type: string
      summary: Login
      tags:
      - Users
  /packages:
    get:
      consumes:
      - application/json
      description: Retrieve all packages.
      produces:
      - application/json
      responses:
        "200":
          description: List of packages
          schema:
            items:
              $ref: '#/definitions/model.Package'
            type: array
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all packages
      tags:
      - Packages
  /packages/create:
    post:
      consumes:
      - application/json
      description: Create a new package.
      parameters:
      - description: Package object
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/payload.Package'
      produces:
      - application/json
      responses:
        "201":
          description: Package created successfully
          schema:
            type: string
        "400":
          description: Invalid request format
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new package
      tags:
      - Packages
  /packages/delete/{id}:
    patch:
      consumes:
      - application/json
      description: Soft delete a package by setting is_deleted field to true.
      parameters:
      - description: Package ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Package deleted successfully
          schema:
            type: string
        "404":
          description: Package not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Soft delete a package
      tags:
      - Packages
  /packages/edit/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing package by ID.
      parameters:
      - description: Package ID
        in: path
        name: id
        required: true
        type: integer
      - description: Package object
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/payload.Package'
      produces:
      - application/json
      responses:
        "200":
          description: Package updated successfully
          schema:
            type: string
        "400":
          description: Invalid request format
          schema:
            type: string
        "404":
          description: Package not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update a package
      tags:
      - Packages
  /purchase:
    post:
      consumes:
      - application/json
      description: Purchase premium membership.
      parameters:
      - description: Purchase object
        in: body
        name: purchase
        required: true
        schema:
          $ref: '#/definitions/model.Purchase'
      produces:
      - application/json
      responses:
        "201":
          description: Purchase successful
          schema:
            type: string
        "400":
          description: Invalid request format
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Purchase premium
  /signup:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided phone number.
      parameters:
      - description: Signup Object
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/payload.Entry'
      produces:
      - application/json
      responses:
        "201":
          description: OTP generated successfully
          schema:
            $ref: '#/definitions/response.OTP'
        "400":
          description: Invalid request format
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Register a new user
      tags:
      - Users
  /swipe:
    post:
      consumes:
      - application/json
      description: Swipe left or right on a profile.
      parameters:
      - description: Swipe object
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/payload.Swipe'
      produces:
      - application/json
      responses:
        "201":
          description: Swipe recorded successfully
          schema:
            type: string
        "400":
          description: Invalid request format
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Swipe
  /verify-otp:
    post:
      consumes:
      - application/json
      description: Verify the OTP entered by the user and create a session.
      parameters:
      - description: Verify OTP object
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/payload.OTP'
      produces:
      - application/json
      responses:
        "200":
          description: OTP verified successfully
          schema:
            type: string
        "400":
          description: Invalid OTP
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Verify OTP
      tags:
      - Users
swagger: "2.0"
