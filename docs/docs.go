// Package docs Code generated by swaggo/swag at 2024-05-21 00:28:44.7229242 +0700 +07 m=+0.643786201. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "Login with the provided phone number and get OTP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login Object",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Payload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP generated successfully",
                        "schema": {
                            "$ref": "#/definitions/main.OTPResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Invalid phone number",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/purchase": {
            "post": {
                "description": "Purchase premium membership.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Purchase premium",
                "parameters": [
                    {
                        "description": "Purchase object",
                        "name": "purchase",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Purchase"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Purchase successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Register a new user with the provided phone number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Signup Object",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Payload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OTP generated successfully",
                        "schema": {
                            "$ref": "#/definitions/main.OTPResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/swipe": {
            "post": {
                "description": "Swipe left or right on a profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Swipe",
                "parameters": [
                    {
                        "description": "Swipe object",
                        "name": "swipe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Swipe"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Swipe recorded successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get a list of users based on the logged-in user's preferences.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a list of users based on preferences",
                "responses": {
                    "200": {
                        "description": "List of users matching preferences",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/verify-otp": {
            "post": {
                "description": "Verify the OTP entered by the user and create a session.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Verify OTP",
                "parameters": [
                    {
                        "description": "OTP verification payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid OTP",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.OTPResponse": {
            "type": "object",
            "properties": {
                "otp": {
                    "type": "string"
                }
            }
        },
        "main.Payload": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "phone_number": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "main.Purchase": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "purchase_date": {
                    "type": "string"
                }
            }
        },
        "main.Swipe": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "swipe_date": {
                    "type": "string"
                },
                "swipe_type": {
                    "type": "string"
                }
            }
        },
        "main.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "is_premium": {
                    "type": "boolean"
                },
                "login_at": {
                    "type": "string"
                },
                "logout_at": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "signup_at": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Dating App API",
	Description:      "This is a sample dating app API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
